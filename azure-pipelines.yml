# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- develop
- feature/*
- master

pool:
  name: Demo

variables:
  buildConfiguration: 'Release'
  dotNetFramework: 'net6.0'
  dotNetVersion: '6.0.300'
  targetRuntime: 'linux-x64'

stages:
- stage: 'Build'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure subscription 1 (824afe03-fb16-40e3-b06c-ece467b78076)'
    appType: 'webAppLinux'
    WebAppName: 'reshapp'
    packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
    jobs:
  - job: 'Build'
    steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'dotnet build $(buildConfiguration)'

    - script: dotnet publish -f $(dotNetFramework) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)
      displayName: Publish Project 

    - task: Npm@1
      displayName: 'Client Tests'
      inputs:
        command: 'custom'
        workingDir: 'ClientApp'
        customCommand: 'run test'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
  
    # - task: DotNetCoreCLI@2
    #   displayName: Publish Projects
    #   inputs:
    #     command: 'publish'
    #     publishWebProjects: true
    #     arguments: '--configuration $(buildConfiguration) -f $(dotNetFramework) --runtime $(targetRuntime) --self-contained -o $(Build.ArtifactStagingDirectory)'
    #     zipAfterPublish: true
    - stage: 'DeployDev'
  displayName: 'Deploy to Dev'
  # condition: and(succeeded(), eq(variables.isMain, 'true'))
  variables: 
    appName: 'reshapp'
    jobs:
  - deployment: 'Dev'
     
    environment: 'Dev'
    strategy: 
       runOnce:     
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Pay-As-You-Go(63b33cff-5a1f-40bc-8e84-ad332cd71188)'
              appType: 'webAppLinux'
              WebAppName: $(appName)
              packageForLinux: '$(Pipeline.Workspace)/$(artifaceName)/$(buildConfiguration)/*.zip'